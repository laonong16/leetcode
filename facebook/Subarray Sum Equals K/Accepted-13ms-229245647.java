// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Subarray Sum Equals K
// https://leetcode.com/problems/subarray-sum-equals-k/
// 

class Solution {
    public int subarraySum(int[] nums, int k) {
     // Hash of continuous Sum
	HashMap<Integer, Integer> sumMap = new HashMap<>();
	sumMap.put(0, 1);
	int sum = 0, count = 0;

	for (int n: nums) {
		sum += n;
		int sub = sum - k;

		// Add number of continuous subarray has sum = k to count
		if (sumMap.containsKey(sub)) {
			count += sumMap.get(sub);
		}

		// Add current continuous sum to sumMap
		if (!sumMap.containsKey(sum)) {
			sumMap.put(sum, 1);
		} else {
			sumMap.put(sum, sumMap.get(sum) + 1);
		}
	}

	return count;   
    }
}

