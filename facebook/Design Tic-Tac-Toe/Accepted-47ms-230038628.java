// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Design Tic-Tac-Toe
// https://leetcode.com/problems/design-tic-tac-toe/
// 

class TicTacToe {

  int[][] board;
    /** Initialize your data structure here. */
    public TicTacToe(int n) {
        board = new int[n][n];
    }
    
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */
    public int move(int row, int col, int player) {
        board[row][col] = player;
        
        if(checkCol(col, player) || checkRow(row, player) || checkDiagnoal(row, col, player)) return player;
        
        return 0;
    }
    
    private boolean checkDiagnoal(int row, int col, int player){
        int count = 0;
        if(row == col){
            for(int i = 0; i < board.length; i++){
                if(board[i][i] != player) break;
                count++;
            }
        }

        if(row == board.length - col - 1){
            for(int i = 0; i < board.length; i++){
                if(board[board.length - i - 1][i] != player) break;
                count++;
            }
        }

        // not on diagnoal, will return win as false as default
        return count != 0 && count % board.length == 0;
    }
    
    private boolean checkCol(int col, int player){
        for(int i = 0; i < board.length; i++){
            if(board[i][col] != player) return false;
        }
        
        return true;
    }
    
    private boolean checkRow(int row, int player){
        for(int i = 0; i < board.length; i++){
            if(board[row][i] != player) return false;
        }
        
        return true;
    }

}

/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */

