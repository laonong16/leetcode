// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Group Anagrams
// https://leetcode.com/problems/group-anagrams/
// 

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
      List<List<String>> groups   =   new ArrayList<>();
        Map<String, List<String>> anagramMap   =   new HashMap<>();
        
        for(String word : strs){
            String hash   =   hashing(word);   //unique for each anagram
            List<String> group  =   anagramMap.get(hash);
            
            if(null == group){
                group  =   new ArrayList();
                anagramMap.put(hash, group);
           
            }
            
            group.add(word);
        }
        
        groups.addAll(anagramMap.values());
        
        return groups;  
    }
    public String hashing(String word) {
      int[] arr = new int[26];
      for(char ch: word.toCharArray()) {
          arr[ch-'a']++;
      }
        StringBuilder sb = new StringBuilder();
        for(int in : arr) {
            sb.append(in);
        }
        return sb.toString();
    }
}

