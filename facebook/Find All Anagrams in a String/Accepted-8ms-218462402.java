// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Find All Anagrams in a String
// https://leetcode.com/problems/find-all-anagrams-in-a-string/
// 

class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        int[] pArr = new int[26];
        int pLen = p.length();
        for(char ch : p.toCharArray()) {
            pArr[ch - 'a']++;
        }
         int[] temp = new int[26];
        List<Integer> result = new ArrayList<>();
        for(int i=0; i < s.length(); i++) {
            if (i < pLen) {
                temp[s.charAt(i) - 'a']++;
                if (i == pLen -1 && isSame(temp, pArr)) {
                    result.add(i - pLen + 1);
                } 
            } else {
                temp[s.charAt(i) - 'a']++;
                temp[s.charAt(i -pLen) - 'a']--;
                if ( isSame(temp, pArr)) {
                    result.add(i-p.length() + 1);
                }
            }
        }
        return result;
    }
    public boolean isSame(int[] a, int[] b) {
        for (int i = 0; i < 26; i++) {
            if (a[i] != b[i]) {
                return false;
            }
        }
        return true;
    }
}

