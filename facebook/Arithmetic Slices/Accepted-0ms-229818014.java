// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Arithmetic Slices
// https://leetcode.com/problems/arithmetic-slices/
// 

class Solution {
    /*
    用DP来做，定义一个一维dp数组，其中dp[i]表示，到i位置为止的算数切片的个数，那么我们从第三个数字开始遍历，如果当前数字和之前两个数字构成算数切片，那么我们更新dp[i]为dp[i-1]+1，然后res累加上dp[i]的值即可：
*/
    public int numberOfArithmeticSlices(int[] A) {
        if (A.length < 3) return 0;
        int[]dp = new int[A.length];
        int sum = 0;
        for(int i = 2; i < A.length; i++) {
            if (A[i] - A[i-1] == A[i-1] - A[i-2]) {
                dp[i] = dp[i-1] + 1;
            }
            sum+= dp[i];
        }
        return sum;
    }
}

