// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Exclusive Time of Functions
// https://leetcode.com/problems/exclusive-time-of-functions/
// 

class Solution {
    public int[] exclusiveTime(int n, List<String> logs) {
        int[] result = new int [n];
        Stack<Integer> stack = new Stack<>();
        int prevTime = 0;
        for (String log : logs) {
            String[] logArr = log.split(":");
            int id = Integer.parseInt(logArr[0]);
            int curTime = Integer.parseInt(logArr[2]);
            if(logArr[1].equals("start")) {
                if(!stack.isEmpty()) {
                    result[stack.peek()] += curTime - prevTime;
                    prevTime = curTime;
                }
                stack.push(id);
            } else {
                result[stack.pop()] += curTime - prevTime  +1;
                prevTime = curTime + 1;
            }
        }
        return result;
    }
}

