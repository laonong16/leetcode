// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Divide Two Integers
// https://leetcode.com/problems/divide-two-integers/
// 

class Solution {
    public int divide(int dividend, int divisor) {
     int sign = 1;
	if (dividend > 0 && divisor < 0 || dividend < 0 && divisor > 0)
		sign = -1;
	long ldividend = Math.abs((long) dividend);
	long ldivisor = Math.abs((long) divisor);
	if (ldividend>Integer.MAX_VALUE && divisor==-1)
        return Integer.MAX_VALUE;
	if (ldividend == 0 || ldividend < ldivisor || ldivisor==0)	
        return 0;	
    int ans=0;
    while(ldividend >= ldivisor) {
    long sum = ldivisor;
	long multiple = 1;
	while (sum+sum <= ldividend) {
		sum += sum;
		multiple += multiple;
	}
        ans+=multiple;
        ldividend-= sum;
    }
	return ans*sign;   
    }
}

