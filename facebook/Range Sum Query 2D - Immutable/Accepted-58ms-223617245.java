// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Range Sum Query 2D - Immutable
// https://leetcode.com/problems/range-sum-query-2d-immutable/
// 

class NumMatrix {

    int[][] sum;
    public NumMatrix(int[][] matrix) {
        init(matrix);
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
            return sum[row2+1][col2+1]+ sum[row1][col1] - sum[row1][col2+1]-sum[row2+1][col1];
    }
    
    public void init(int[][]matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0) return; 
        int m = matrix.length;
        int n = matrix[0].length;
                sum = new int[matrix.length+1][matrix[0].length+1];

        for (int i = 1; i <=m; i++) {
            for (int j = 1; j <= n; j++) {
                sum[i][j] = sum[i-1][j] + sum[i][j-1] -sum[i-1][j-1] + matrix[i-1][j-1];
            }
        }
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */

