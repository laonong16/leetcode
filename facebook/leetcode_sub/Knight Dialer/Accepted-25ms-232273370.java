// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Knight Dialer
// https://leetcode.com/problems/knight-dialer/
// 

class Solution {
       private final int[][] MOVES = new int[][] {{4,6},{6,8},{7,9},{4,8},{3,9,0},{},{1,7,0},{2,6},{1,3},{2,4}};
    private final int MOD = 1_000_000_007;
    
    public int knightDialer(int n) {
        long dp[][] = new long[n][10];
        long result = 0;
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 10; j++) {
                if (i == 0) {
                    dp[i][j] = 1;
                    continue;
                }
                for (int move : MOVES[j]) {
                    dp[i][j] += dp[i - 1][move] % MOD;
                }
            }
        }
        
        for (int j = 0; j < 10; j++) {
            result += dp[n - 1][j];
        }
        
        return (int) (result % MOD);
    } 
}

