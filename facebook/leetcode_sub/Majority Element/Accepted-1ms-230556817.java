// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Majority Element
// https://leetcode.com/problems/majority-element/
// 

class Solution {
    public int majorityElement(int[] nums) {
       // use count represent total major number in the array count = 0  majorNUmber = nums[0]  
       // traverse the  array if the  nums[i] is not same as  majornumber count--  else count++ if the count is 0  majority number is next  nums[i]  retrun the majority one
        
     if (nums == null || nums.length == 0) {
        return -1;
     }
        int count = 0;
        int majority = -1;
        for(int num:nums) {
            if (count == 0) {
                majority = num;
                count++;
            } else {
                if(num == majority) {
                    count++;
                } else {
                    count--;
                }
            }
        }
        return majority;
    }
}

