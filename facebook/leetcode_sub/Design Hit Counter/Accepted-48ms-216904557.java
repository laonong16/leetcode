// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Design Hit Counter
// https://leetcode.com/problems/design-hit-counter/
// 

class HitCounter {
    HitCount[] bucket; 
    /** Initialize your data structure here. */
    public HitCounter() {
        bucket = new HitCount[300];
    }
    
    /** Record a hit.
        @param timestamp - The current timestamp (in seconds granularity). */
    public void hit(int timestamp) {
        int index = (timestamp -1) % 300;
        if (bucket[index] == null) {
            bucket[index] = new HitCount(0,timestamp);
        }
        if(bucket[index].timestamp != timestamp) {
            bucket[index].count = 1;
            bucket[index].timestamp = timestamp;
        } else {
            bucket[index].count = bucket[index].count + 1;
        }
    }
    
    /** Return the number of hits in the past 5 minutes.
        @param timestamp - The current timestamp (in seconds granularity). */
    public int getHits(int timestamp) {
       int total =  0;
        for (HitCount hitcount : bucket) {
            if (hitcount != null && timestamp- hitcount.timestamp   < 300   ) {
                total += hitcount.count;
            }
        }
        return total;
    }
}
class HitCount {
    int count;
    int timestamp;
    public HitCount(int count, int timestamp) {
        this.count = count;
        this.timestamp = timestamp;
    }
}
/**
 * Your HitCounter object will be instantiated and called as such:
 * HitCounter obj = new HitCounter();
 * obj.hit(timestamp);
 * int param_2 = obj.getHits(timestamp);
 */

