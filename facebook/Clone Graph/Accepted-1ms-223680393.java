// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Clone Graph
// https://leetcode.com/problems/clone-graph/
// 

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> neighbors;

    public Node() {}

    public Node(int _val,List<Node> _neighbors) {
        val = _val;
        neighbors = _neighbors;
    }
};
*/
class Solution {
   Map<Node, Node> map = new HashMap<>();
    public Node cloneGraph(Node node) {
      if (node == null) return null;    
      if (map.containsKey(node)) return map.get(node);
      
      Node newNode = new Node();
      map.put(node, newNode);
      newNode.val = node.val;
      List<Node> newNeighbors = new ArrayList<>();
      for (Node neighbor : node.neighbors) {
        Node newNeighbor = cloneGraph(neighbor);
        newNeighbors.add(newNeighbor);
      }
      newNode.neighbors = newNeighbors;
      return newNode;
    }
}

