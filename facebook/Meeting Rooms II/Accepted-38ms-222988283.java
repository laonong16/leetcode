// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Meeting Rooms II
// https://leetcode.com/problems/meeting-rooms-ii/
// 

class Solution {
    public int minMeetingRooms(int[][] intervals) {
        if (intervals == null || intervals.length == 0) {
            return 0;
        }
        Arrays.sort(intervals, (a,b) -> a[0] - b[0]);
        PriorityQueue<int[]> pq = new PriorityQueue<>((a,b) -> a[1] - b[1]);
        for (int[] it : intervals) {
            if (!pq.isEmpty() && pq.peek()[1] <= it[0]) {
                pq.poll();
            }
            pq.offer(it);
        }
        return pq.size();
    }
}

