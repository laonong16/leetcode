// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// UTF-8 Validation
// https://leetcode.com/problems/utf-8-validation/
// 

class Solution {
    /*
    Loop through the int array.
For current int, convert to 8 digits string with '0' prefix padding
If it starts with '0', continue;
If it starts with known patterns, setup the number of digits
Otherwise, return false since unknown pattern encountered.
Check following number of ints to see if they all are starts with "10", if not, return false;
    */
    public boolean validUtf8(int[] data) {
     if (data == null || data.length == 0) return false;

    int i = 0;
    while (i < data.length) {
        String strBinary = toBinaryString(data[i++]);
        
        if (strBinary.startsWith("0")) {
            continue;
        }
        
        int numLeft = 0;
        
        if (strBinary.startsWith("110")) {
            numLeft = 1;
        } else if (strBinary.startsWith("1110")) {
            numLeft = 2;
        } else if (strBinary.startsWith("11110")) {
            numLeft = 3;
        } else {
            return false;
        }
        
        if (i + numLeft > data.length) {
            return false;
        }
        
        while (numLeft > 0) {
            strBinary = toBinaryString(data[i++]);
            if (!strBinary.startsWith("10")) {
                return false;
            }
            numLeft--;
        }
    }
    
    return true;
}

private String toBinaryString(int input) {
    char[] out = new char[8];
    
    for (int j = 0; j < 8; j++) out[j] = '0';
    
    int i = 7;
    while(input > 0 && i >= 0) {
        out[i--] += input % 2;
        input /= 2;
    }
    
    return new String(out);
}
}

