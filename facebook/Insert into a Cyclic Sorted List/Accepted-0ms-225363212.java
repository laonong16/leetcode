// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Insert into a Cyclic Sorted List
// https://leetcode.com/problems/insert-into-a-cyclic-sorted-list/
// 

/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;

    public Node() {}

    public Node(int _val,Node _next) {
        val = _val;
        next = _next;
    }
};
*/
class Solution {
    public Node insert(Node head, int insertVal) {
       Node node = new Node(insertVal);
        
        if(head == null) {
            node.next = node;
            return node;
        }

        Node pre = head;
        Node next = head.next;

        while(next != head) {

            if(( insertVal < next.val && pre.val <= insertVal)           // e.g [1 -> 3] with val=1 or 2      (same as pre OR between pre and next)
                || (pre.val <= insertVal && pre.val > next.val )   // e.g [3 -> 1] with val=3 or higher (same as pre OR higher than pre)
                || (pre.val > next.val && insertVal <= next.val )){// e.g [3 -> 1] with val=1 or lower  (same as next OR lower than next)
                break;
            }
            pre = next;
            next = next.next;
        }

        pre.next = node;
        node.next = next;
        return head;  
    }
}

