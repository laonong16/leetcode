// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Pascal's Triangle
// https://leetcode.com/problems/pascals-triangle/
// 

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result = new ArrayList<>();
        for(int i = 1; i <= numRows; i++) {
            List<Integer> list = new ArrayList<>();
            if (i == 1) {
                list.add(1);
            } else {
                list.add(1);
                List<Integer> prev = result.get(result.size() - 1);
                for(int j = 0; j < prev.size() - 1; j++) {
                    list.add(prev.get(j) + prev.get(j+1));
                }
                list.add(1);
            }
            result.add(list);
        }
        return result;
    }
}

